package OPERATIONPROJECT.model.BC.EO;

import OPERATIONPROJECT.model.BC.VO.AssNotesReviewDetailsVORowImpl;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Key;
import oracle.jbo.domain.BFileDomain;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Feb 15 17:44:14 EET 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProductContractDDownloadEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Id,
        AssignId,
        ItemId,
        ComponentId,
        Quntity,
        QuntityReplaced,
        TreatmentCode,
        PackageNo,
        CardNo,
        DriverId,
        ActionDate,
        QuantityCancel,
        QuantityDirty,
        Handle,
        DeliveryType,
        Aid,
        HandleCode,
        UnitPrice,
        AssignmentId,
        UpdatedBy,
        UpdateTime,
        PendingWorkAssView,
        NewCancelSalesContracts,
        AssNotesReviewDetails;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int ASSIGNID = AttributesEnum.AssignId.index();
    public static final int ITEMID = AttributesEnum.ItemId.index();
    public static final int COMPONENTID = AttributesEnum.ComponentId.index();
    public static final int QUNTITY = AttributesEnum.Quntity.index();
    public static final int QUNTITYREPLACED = AttributesEnum.QuntityReplaced.index();
    public static final int TREATMENTCODE = AttributesEnum.TreatmentCode.index();
    public static final int PACKAGENO = AttributesEnum.PackageNo.index();
    public static final int CARDNO = AttributesEnum.CardNo.index();
    public static final int DRIVERID = AttributesEnum.DriverId.index();
    public static final int ACTIONDATE = AttributesEnum.ActionDate.index();
    public static final int QUANTITYCANCEL = AttributesEnum.QuantityCancel.index();
    public static final int QUANTITYDIRTY = AttributesEnum.QuantityDirty.index();
    public static final int HANDLE = AttributesEnum.Handle.index();
    public static final int DELIVERYTYPE = AttributesEnum.DeliveryType.index();
    public static final int AID = AttributesEnum.Aid.index();
    public static final int HANDLECODE = AttributesEnum.HandleCode.index();
    public static final int UNITPRICE = AttributesEnum.UnitPrice.index();
    public static final int ASSIGNMENTID = AttributesEnum.AssignmentId.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATETIME = AttributesEnum.UpdateTime.index();
    public static final int PENDINGWORKASSVIEW = AttributesEnum.PendingWorkAssView.index();
    public static final int NEWCANCELSALESCONTRACTS = AttributesEnum.NewCancelSalesContracts.index();
    public static final int ASSNOTESREVIEWDETAILS = AttributesEnum.AssNotesReviewDetails.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ProductContractDDownloadEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("OPERATIONPROJECT.model.BC.EO.ProductContractDDownloadEO");
    }


    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for AssignId, using the alias name AssignId.
     * @return the value of AssignId
     */
    public String getAssignId() {
        return (String) getAttributeInternal(ASSIGNID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssignId.
     * @param value value to set the AssignId
     */
    public void setAssignId(String value) {
        setAttributeInternal(ASSIGNID, value);
    }

    /**
     * Gets the attribute value for ItemId, using the alias name ItemId.
     * @return the value of ItemId
     */
    public String getItemId() {
        return (String) getAttributeInternal(ITEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItemId.
     * @param value value to set the ItemId
     */
    public void setItemId(String value) {
        setAttributeInternal(ITEMID, value);
    }

    /**
     * Gets the attribute value for ComponentId, using the alias name ComponentId.
     * @return the value of ComponentId
     */
    public String getComponentId() {
        return (String) getAttributeInternal(COMPONENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ComponentId.
     * @param value value to set the ComponentId
     */
    public void setComponentId(String value) {
        setAttributeInternal(COMPONENTID, value);
    }

    /**
     * Gets the attribute value for Quntity, using the alias name Quntity.
     * @return the value of Quntity
     */
    public Long getQuntity() {
        return (Long) getAttributeInternal(QUNTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Quntity.
     * @param value value to set the Quntity
     */
    public void setQuntity(Long value) {
        setAttributeInternal(QUNTITY, value);
    }

    /**
     * Gets the attribute value for QuntityReplaced, using the alias name QuntityReplaced.
     * @return the value of QuntityReplaced
     */
    public Long getQuntityReplaced() {
        return (Long) getAttributeInternal(QUNTITYREPLACED);
    }

    /**
     * Sets <code>value</code> as the attribute value for QuntityReplaced.
     * @param value value to set the QuntityReplaced
     */
    public void setQuntityReplaced(Long value) {
        setAttributeInternal(QUNTITYREPLACED, value);
    }

    /**
     * Gets the attribute value for TreatmentCode, using the alias name TreatmentCode.
     * @return the value of TreatmentCode
     */
    public BigDecimal getTreatmentCode() {
        return (BigDecimal) getAttributeInternal(TREATMENTCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TreatmentCode.
     * @param value value to set the TreatmentCode
     */
    public void setTreatmentCode(BigDecimal value) {
        setAttributeInternal(TREATMENTCODE, value);
    }

    /**
     * Gets the attribute value for PackageNo, using the alias name PackageNo.
     * @return the value of PackageNo
     */
    public Long getPackageNo() {
        return (Long) getAttributeInternal(PACKAGENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for PackageNo.
     * @param value value to set the PackageNo
     */
    public void setPackageNo(Long value) {
        setAttributeInternal(PACKAGENO, value);
    }

    /**
     * Gets the attribute value for CardNo, using the alias name CardNo.
     * @return the value of CardNo
     */
    public String getCardNo() {
        return (String) getAttributeInternal(CARDNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for CardNo.
     * @param value value to set the CardNo
     */
    public void setCardNo(String value) {
        setAttributeInternal(CARDNO, value);
    }

    /**
     * Gets the attribute value for DriverId, using the alias name DriverId.
     * @return the value of DriverId
     */
    public BigDecimal getDriverId() {
        return (BigDecimal) getAttributeInternal(DRIVERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DriverId.
     * @param value value to set the DriverId
     */
    public void setDriverId(BigDecimal value) {
        setAttributeInternal(DRIVERID, value);
    }

    /**
     * Gets the attribute value for ActionDate, using the alias name ActionDate.
     * @return the value of ActionDate
     */
    public String getActionDate() {
        return (String) getAttributeInternal(ACTIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActionDate.
     * @param value value to set the ActionDate
     */
    public void setActionDate(String value) {
        setAttributeInternal(ACTIONDATE, value);
    }

    /**
     * Gets the attribute value for QuantityCancel, using the alias name QuantityCancel.
     * @return the value of QuantityCancel
     */
    public BigDecimal getQuantityCancel() {
        return (BigDecimal) getAttributeInternal(QUANTITYCANCEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for QuantityCancel.
     * @param value value to set the QuantityCancel
     */
    public void setQuantityCancel(BigDecimal value) {
        setAttributeInternal(QUANTITYCANCEL, value);
    }

    /**
     * Gets the attribute value for QuantityDirty, using the alias name QuantityDirty.
     * @return the value of QuantityDirty
     */
    public BigDecimal getQuantityDirty() {
        return (BigDecimal) getAttributeInternal(QUANTITYDIRTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for QuantityDirty.
     * @param value value to set the QuantityDirty
     */
    public void setQuantityDirty(BigDecimal value) {
        setAttributeInternal(QUANTITYDIRTY, value);
    }

    /**
     * Gets the attribute value for Handle, using the alias name Handle.
     * @return the value of Handle
     */
    public BigDecimal getHandle() {
        return (BigDecimal) getAttributeInternal(HANDLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Handle.
     * @param value value to set the Handle
     */
    public void setHandle(BigDecimal value) {
        setAttributeInternal(HANDLE, value);
    }

    /**
     * Gets the attribute value for DeliveryType, using the alias name DeliveryType.
     * @return the value of DeliveryType
     */
    public Integer getDeliveryType() {
        return (Integer) getAttributeInternal(DELIVERYTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DeliveryType.
     * @param value value to set the DeliveryType
     */
    public void setDeliveryType(Integer value) {
        setAttributeInternal(DELIVERYTYPE, value);
    }

    /**
     * Gets the attribute value for Aid, using the alias name Aid.
     * @return the value of Aid
     */
    public BigDecimal getAid() {
        return (BigDecimal) getAttributeInternal(AID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Aid.
     * @param value value to set the Aid
     */
    public void setAid(BigDecimal value) {
        setAttributeInternal(AID, value);
    }

    /**
     * Gets the attribute value for HandleCode, using the alias name HandleCode.
     * @return the value of HandleCode
     */
    public String getHandleCode() {
        return (String) getAttributeInternal(HANDLECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for HandleCode.
     * @param value value to set the HandleCode
     */
    public void setHandleCode(String value) {
        setAttributeInternal(HANDLECODE, value);
    }

    /**
     * Gets the attribute value for UnitPrice, using the alias name UnitPrice.
     * @return the value of UnitPrice
     */
    public Long getUnitPrice() {
        return (Long) getAttributeInternal(UNITPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UnitPrice.
     * @param value value to set the UnitPrice
     */
    public void setUnitPrice(Long value) {
        setAttributeInternal(UNITPRICE, value);
    }

    /**
     * Gets the attribute value for AssignmentId, using the alias name AssignmentId.
     * @return the value of AssignmentId
     */
    public BigDecimal getAssignmentId() {
        return (BigDecimal) getAttributeInternal(ASSIGNMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssignmentId.
     * @param value value to set the AssignmentId
     */
    public void setAssignmentId(BigDecimal value) {
        setAttributeInternal(ASSIGNMENTID, value);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdateTime, using the alias name UpdateTime.
     * @return the value of UpdateTime
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) getAttributeInternal(UPDATETIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdateTime.
     * @param value value to set the UpdateTime
     */
    public void setUpdateTime(Timestamp value) {
        setAttributeInternal(UPDATETIME, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getPendingWorkAssView() {
        return (EntityImpl) getAttributeInternal(PENDINGWORKASSVIEW);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setPendingWorkAssView(EntityImpl value) {
        setAttributeInternal(PENDINGWORKASSVIEW, value);
    }


    /**
     * Uses the link NewCancelSalesContractProductsVL to return rows of NewCancelSalesContractsProducts
     */
    public ViewRowImpl getNewCancelSalesContracts() {
        return (ViewRowImpl) getAttributeInternal(NEWCANCELSALESCONTRACTS);
    }


    /**
     * Uses the link NotesProductContractDVL to return rows of ProductContractDDownloadVO
     */
    public AssNotesReviewDetailsVORowImpl getAssNotesReviewDetails() {
        return (AssNotesReviewDetailsVORowImpl) getAttributeInternal(ASSNOTESREVIEWDETAILS);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal id) {
        return new Key(new Object[] { id });
    }

    /**
     * Validation method for ProductContractDDownloadEO.
     */
    public boolean validateProductContractDDownloadEO() {
      /*  if (Integer.parseInt(getQuntity().toString()) == Integer.parseInt(getQuantityCancel().toString())+Integer.parseInt(getQuantityDirty().toString())+Integer.parseInt(getQuntityReplaced().toString())){
            return true;
        }
        else{
        return false;
        }*/
        return true;
    }


}

