package OPERATIONPROJECT.model.BC.EO;

import java.math.BigDecimal;

import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 17 07:02:23 EET 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PrmosLookupEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        ProductId,
        ProductName,
        SellingPrice;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PRODUCTID = AttributesEnum.ProductId.index();
    public static final int PRODUCTNAME = AttributesEnum.ProductName.index();
    public static final int SELLINGPRICE = AttributesEnum.SellingPrice.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PrmosLookupEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("OPERATIONPROJECT.model.BC.EO.PrmosLookupEO");
    }

    /**
     * Gets the attribute value for ProductId, using the alias name ProductId.
     * @return the value of ProductId
     */
    public String getProductId() {
        return (String) getAttributeInternal(PRODUCTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProductId.
     * @param value value to set the ProductId
     */
    public void setProductId(String value) {
        setAttributeInternal(PRODUCTID, value);
    }

    /**
     * Gets the attribute value for ProductName, using the alias name ProductName.
     * @return the value of ProductName
     */
    public String getProductName() {
        return (String) getAttributeInternal(PRODUCTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProductName.
     * @param value value to set the ProductName
     */
    public void setProductName(String value) {
        setAttributeInternal(PRODUCTNAME, value);
    }

    /**
     * Gets the attribute value for SellingPrice, using the alias name SellingPrice.
     * @return the value of SellingPrice
     */
    public Long getSellingPrice() {
        return (Long) getAttributeInternal(SELLINGPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SellingPrice.
     * @param value value to set the SellingPrice
     */
    public void setSellingPrice(Long value) {
        setAttributeInternal(SELLINGPRICE, value);
    }

    /**
     * @param productId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String productId) {
        return new Key(new Object[] { productId });
    }


}

