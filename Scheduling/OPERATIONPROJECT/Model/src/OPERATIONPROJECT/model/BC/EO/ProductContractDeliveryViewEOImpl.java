package OPERATIONPROJECT.model.BC.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Feb 07 05:57:49 EET 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProductContractDeliveryViewEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        ProductSku,
        AssignmentId,
        ProductConId,
        PackageVersion,
        PackageNo,
        ProductName,
        TreatmentName,
        ActualQuantity,
        Price,
        Quantity,
        QuantityConfirmed,
        Id,
        CardNo,
        DeliveryFlag,
        ProductId,
        TreatmentId,
        NextDeliveryDate,
        PackageId,
        PartialSubmit,
        Financial;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PRODUCTSKU = AttributesEnum.ProductSku.index();
    public static final int ASSIGNMENTID = AttributesEnum.AssignmentId.index();
    public static final int PRODUCTCONID = AttributesEnum.ProductConId.index();
    public static final int PACKAGEVERSION = AttributesEnum.PackageVersion.index();
    public static final int PACKAGENO = AttributesEnum.PackageNo.index();
    public static final int PRODUCTNAME = AttributesEnum.ProductName.index();
    public static final int TREATMENTNAME = AttributesEnum.TreatmentName.index();
    public static final int ACTUALQUANTITY = AttributesEnum.ActualQuantity.index();
    public static final int PRICE = AttributesEnum.Price.index();
    public static final int QUANTITY = AttributesEnum.Quantity.index();
    public static final int QUANTITYCONFIRMED = AttributesEnum.QuantityConfirmed.index();
    public static final int ID = AttributesEnum.Id.index();
    public static final int CARDNO = AttributesEnum.CardNo.index();
    public static final int DELIVERYFLAG = AttributesEnum.DeliveryFlag.index();
    public static final int PRODUCTID = AttributesEnum.ProductId.index();
    public static final int TREATMENTID = AttributesEnum.TreatmentId.index();
    public static final int NEXTDELIVERYDATE = AttributesEnum.NextDeliveryDate.index();
    public static final int PACKAGEID = AttributesEnum.PackageId.index();
    public static final int PARTIALSUBMIT = AttributesEnum.PartialSubmit.index();
    public static final int FINANCIAL = AttributesEnum.Financial.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ProductContractDeliveryViewEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("OPERATIONPROJECT.model.BC.EO.ProductContractDeliveryViewEO");
    }


    /**
     * Gets the attribute value for ProductSku, using the alias name ProductSku.
     * @return the value of ProductSku
     */
    public String getProductSku() {
        return (String) getAttributeInternal(PRODUCTSKU);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProductSku.
     * @param value value to set the ProductSku
     */
    public void setProductSku(String value) {
        setAttributeInternal(PRODUCTSKU, value);
    }

    /**
     * Gets the attribute value for AssignmentId, using the alias name AssignmentId.
     * @return the value of AssignmentId
     */
    public Long getAssignmentId() {
        return (Long) getAttributeInternal(ASSIGNMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssignmentId.
     * @param value value to set the AssignmentId
     */
    public void setAssignmentId(Long value) {
        setAttributeInternal(ASSIGNMENTID, value);
    }

    /**
     * Gets the attribute value for ProductConId, using the alias name ProductConId.
     * @return the value of ProductConId
     */
    public Long getProductConId() {
        return (Long) getAttributeInternal(PRODUCTCONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProductConId.
     * @param value value to set the ProductConId
     */
    public void setProductConId(Long value) {
        setAttributeInternal(PRODUCTCONID, value);
    }

    /**
     * Gets the attribute value for PackageVersion, using the alias name PackageVersion.
     * @return the value of PackageVersion
     */
    public Long getPackageVersion() {
        return (Long) getAttributeInternal(PACKAGEVERSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for PackageVersion.
     * @param value value to set the PackageVersion
     */
    public void setPackageVersion(Long value) {
        setAttributeInternal(PACKAGEVERSION, value);
    }

    /**
     * Gets the attribute value for PackageNo, using the alias name PackageNo.
     * @return the value of PackageNo
     */
    public Long getPackageNo() {
        return (Long) getAttributeInternal(PACKAGENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for PackageNo.
     * @param value value to set the PackageNo
     */
    public void setPackageNo(Long value) {
        setAttributeInternal(PACKAGENO, value);
    }

    /**
     * Gets the attribute value for ProductName, using the alias name ProductName.
     * @return the value of ProductName
     */
    public String getProductName() {
        return (String) getAttributeInternal(PRODUCTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProductName.
     * @param value value to set the ProductName
     */
    public void setProductName(String value) {
        setAttributeInternal(PRODUCTNAME, value);
    }

    /**
     * Gets the attribute value for TreatmentName, using the alias name TreatmentName.
     * @return the value of TreatmentName
     */
    public String getTreatmentName() {
        return (String) getAttributeInternal(TREATMENTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for TreatmentName.
     * @param value value to set the TreatmentName
     */
    public void setTreatmentName(String value) {
        setAttributeInternal(TREATMENTNAME, value);
    }

    /**
     * Gets the attribute value for ActualQuantity, using the alias name ActualQuantity.
     * @return the value of ActualQuantity
     */
    public Long getActualQuantity() {
        return (Long) getAttributeInternal(ACTUALQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActualQuantity.
     * @param value value to set the ActualQuantity
     */
    public void setActualQuantity(Long value) {
        setAttributeInternal(ACTUALQUANTITY, value);
    }

    /**
     * Gets the attribute value for Price, using the alias name Price.
     * @return the value of Price
     */
    public Long getPrice() {
        return (Long) getAttributeInternal(PRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Price.
     * @param value value to set the Price
     */
    public void setPrice(Long value) {
        setAttributeInternal(PRICE, value);
    }

    /**
     * Gets the attribute value for Quantity, using the alias name Quantity.
     * @return the value of Quantity
     */
    public Long getQuantity() {
        return (Long) getAttributeInternal(QUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Quantity.
     * @param value value to set the Quantity
     */
    public void setQuantity(Long value) {
        setAttributeInternal(QUANTITY, value);
    }

    /**
     * Gets the attribute value for QuantityConfirmed, using the alias name QuantityConfirmed.
     * @return the value of QuantityConfirmed
     */
    public Long getQuantityConfirmed() {
        return (Long) getAttributeInternal(QUANTITYCONFIRMED);
    }

    /**
     * Sets <code>value</code> as the attribute value for QuantityConfirmed.
     * @param value value to set the QuantityConfirmed
     */
    public void setQuantityConfirmed(Long value) {
        setAttributeInternal(QUANTITYCONFIRMED, value);
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public DBSequence getId() {
        return (DBSequence) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(DBSequence value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for CardNo, using the alias name CardNo.
     * @return the value of CardNo
     */
    public Long getCardNo() {
        return (Long) getAttributeInternal(CARDNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for CardNo.
     * @param value value to set the CardNo
     */
    public void setCardNo(Long value) {
        setAttributeInternal(CARDNO, value);
    }

    /**
     * Gets the attribute value for DeliveryFlag, using the alias name DeliveryFlag.
     * @return the value of DeliveryFlag
     */
    public Long getDeliveryFlag() {
        return (Long) getAttributeInternal(DELIVERYFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for DeliveryFlag.
     * @param value value to set the DeliveryFlag
     */
    public void setDeliveryFlag(Long value) {
        setAttributeInternal(DELIVERYFLAG, value);
    }

    /**
     * Gets the attribute value for ProductId, using the alias name ProductId.
     * @return the value of ProductId
     */
    public String getProductId() {
        return (String) getAttributeInternal(PRODUCTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProductId.
     * @param value value to set the ProductId
     */
    public void setProductId(String value) {
        setAttributeInternal(PRODUCTID, value);
    }

    /**
     * Gets the attribute value for TreatmentId, using the alias name TreatmentId.
     * @return the value of TreatmentId
     */
    public Long getTreatmentId() {
        return (Long) getAttributeInternal(TREATMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TreatmentId.
     * @param value value to set the TreatmentId
     */
    public void setTreatmentId(Long value) {
        setAttributeInternal(TREATMENTID, value);
    }

    /**
     * Gets the attribute value for NextDeliveryDate, using the alias name NextDeliveryDate.
     * @return the value of NextDeliveryDate
     */
    public Timestamp getNextDeliveryDate() {
        return (Timestamp) getAttributeInternal(NEXTDELIVERYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NextDeliveryDate.
     * @param value value to set the NextDeliveryDate
     */
    public void setNextDeliveryDate(Timestamp value) {
        setAttributeInternal(NEXTDELIVERYDATE, value);
    }

    /**
     * Gets the attribute value for PackageId, using the alias name PackageId.
     * @return the value of PackageId
     */
    public String getPackageId() {
        return (String) getAttributeInternal(PACKAGEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PackageId.
     * @param value value to set the PackageId
     */
    public void setPackageId(String value) {
        setAttributeInternal(PACKAGEID, value);
    }

    /**
     * Gets the attribute value for PartialSubmit, using the alias name PartialSubmit.
     * @return the value of PartialSubmit
     */
    public Long getPartialSubmit() {
        return (Long) getAttributeInternal(PARTIALSUBMIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PartialSubmit.
     * @param value value to set the PartialSubmit
     */
    public void setPartialSubmit(Long value) {
        setAttributeInternal(PARTIALSUBMIT, value);
    }


    /**
     * Gets the attribute value for Financial, using the alias name Financial.
     * @return the value of Financial
     */
    public Long getFinancial() {
        return (Long) getAttributeInternal(FINANCIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Financial.
     * @param value value to set the Financial
     */
    public void setFinancial(Long value) {
        setAttributeInternal(FINANCIAL, value);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence id) {
        return new Key(new Object[] { id });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
      //  this.refresh(EntityImpl.REFRESH_FORGET_NEW_ROWS);
    }
}

